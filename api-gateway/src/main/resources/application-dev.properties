# Development profile configuration
spring.application.name=api-gateway
server.port=8080

# Disable Eureka for local development (will use direct service URLs)
eureka.client.enabled=false
spring.cloud.discovery.enabled=false
spring.cloud.config.enabled=false
spring.config.import=optional:configserver:

# JWT Configuration - Use simple secret for development
app.jwt.secret=${JWT_SECRET:3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b80c0ceb73d3d121182c95878b9a33cd8caf5bee427d6f0b9b5b989f0bd25c035}

app.jwt.issuer=taskmanagement-dev

# CORS Configuration
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].exposed-headers=Authorization
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].max-age=3600

# Static route configuration for local development with direct URLs
spring.cloud.gateway.routes[0].id=auth-service
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/auth/(?<segment>.*), /api/auth/${segment}

spring.cloud.gateway.routes[1].id=project-service
spring.cloud.gateway.routes[1].uri=http://localhost:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/projects/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/projects/(?<segment>.*), /api/projects/${segment}
spring.cloud.gateway.routes[1].filters[1]=AuthenticationFilter

spring.cloud.gateway.routes[2].id=task-service
spring.cloud.gateway.routes[2].uri=http://localhost:8083
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/tasks/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/api/tasks/(?<segment>.*), /api/tasks/${segment}
spring.cloud.gateway.routes[2].filters[1]=AuthenticationFilter

spring.cloud.gateway.routes[3].id=admin-service
spring.cloud.gateway.routes[3].uri=http://localhost:8085
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/admin/**
spring.cloud.gateway.routes[3].filters[0]=RewritePath=/api/admin/(?<segment>.*), /api/admin/${segment}
spring.cloud.gateway.routes[3].filters[1]=AuthenticationFilter

spring.cloud.gateway.routes[4].id=integration-service
spring.cloud.gateway.routes[4].uri=http://localhost:8084
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/integrations/**
spring.cloud.gateway.routes[4].filters[0]=RewritePath=/api/integrations/(?<segment>.*), /api/integrations/${segment}
spring.cloud.gateway.routes[4].filters[1]=AuthenticationFilter

# Disable Circuit Breaker in development for easier debugging
resilience4j.circuitbreaker.enabled=true
resilience4j.circuitbreaker.instances.auth-service.slidingWindowSize=5
resilience4j.circuitbreaker.instances.auth-service.failureRateThreshold=50
resilience4j.circuitbreaker.instances.auth-service.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.auth-service.permittedNumberOfCallsInHalfOpenState=2

# Logging configuration for development
logging.level.root=INFO
logging.level.com.taskmanagement=DEBUG
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.reactor.netty=INFO

# Rate limiter configuration
resilience4j.ratelimiter.instances.default.limitForPeriod=200
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.default.timeoutDuration=0

# Circuit breaker timeout configuration
resilience4j.timelimiter.configs.default.timeoutDuration=10s