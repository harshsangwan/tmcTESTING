# Docker profile configuration
spring.application.name=api-gateway
server.port=8080

# Enable Eureka for service discovery in Docker environment
eureka.client.enabled=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# Spring Cloud Config - disabled for Docker
spring.cloud.config.enabled=false
spring.config.import=optional:configserver:

# JWT Configuration
app.jwt.secret=${JWT_SECRET:3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b80c0ceb73d3d121182c95878b9a33cd8caf5bee427d6f0b9b5b989f0bd25c035}
app.jwt.issuer=taskmanagement

# CORS Configuration - More restrictive for Docker
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,PATCH,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=Authorization,Content-Type,X-Requested-With
spring.cloud.gateway.globalcors.cors-configurations.[/**].exposed-headers=Authorization
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].max-age=3600

# Disable property-based routing since we use RouteConfig.java
# We'll only use programmatic routing to avoid conflicts

# Actuator Configuration for monitoring
management.endpoints.web.exposure.include=health,info,gateway,metrics
management.endpoint.health.show-details=always

# Logging Configuration for docker environment
logging.level.root=INFO
logging.level.com.taskmanagement.gateway=INFO
logging.level.org.springframework.cloud.gateway=INFO
logging.level.org.springframework.cloud.netflix.eureka=DEBUG

# Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.default.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.default.slidingWindowSize=10
resilience4j.circuitbreaker.instances.default.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.default.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.default.failureRateThreshold=50
resilience4j.circuitbreaker.instances.default.eventConsumerBufferSize=10

# Rate Limiter Configuration  
resilience4j.ratelimiter.instances.default.limitForPeriod=100
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=1s
resilience4j.ratelimiter.instances.default.timeoutDuration=0

# Timeout Configuration
resilience4j.timelimiter.instances.default.timeoutDuration=5s



# Disable default Spring Security password generation
spring.security.user.name=admin
spring.security.user.password=admin
spring.security.user.roles=ADMIN

# Configure actuator security - allow anonymous access to health endpoint
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# Disable security for actuator endpoints (for development/testing)
management.security.enabled=false
spring.security.user.roles=ACTUATOR

# Alternative: Configure security to allow actuator endpoints
management.endpoints.web.base-path=/actuator
management.endpoints.web.path-mapping.health=health
management.security.enabled=false

# For Spring Boot 3.x, use these properties instead:
springdoc.show-actuator=true
management.endpoints.enabled-by-default=true