# Docker environment configuration for auth-service
spring.application.name=auth-service
server.port=8081

# Database Configuration for Docker
spring.datasource.url=jdbc:mysql://mysql:3306/task_management_auth?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=letmEc0de#8
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA / Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# Configure connection pool
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000

# JWT Configuration
app.jwt.secret=${JWT_SECRET:3cfa76ef14937c1c0ea519f8fc057a80fcd04a7420f8e8bcd0a7567c272e007b80c0ceb73d3d121182c95878b9a33cd8caf5bee427d6f0b9b5b989f0bd25c035}
app.jwt.issuer=taskmanagement
app.jwt.expiration=86400000

# Eureka Client Configuration for Docker
eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${server.port}}

# Disable Spring Cloud Config in Docker
spring.cloud.config.enabled=false
spring.config.import=optional:configserver:

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# Add health endpoint explicitly
management.endpoints.web.base-path=/api/auth
management.server.port=8081

# Logging
logging.level.com.taskmanagement.auth=INFO
logging.level.org.springframework.security=INFO
logging.level.org.springframework.cloud.netflix.eureka=DEBUG


# Disable default Spring Security password generation
spring.security.user.name=admin
spring.security.user.password=admin
spring.security.user.roles=ADMIN

# Configure actuator security - allow anonymous access to health endpoint
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# Disable security for actuator endpoints (for development/testing)
management.security.enabled=false
spring.security.user.roles=ACTUATOR

# Alternative: Configure security to allow actuator endpoints
management.endpoints.web.base-path=/actuator
management.endpoints.web.path-mapping.health=health
management.security.enabled=false

# For Spring Boot 3.x, use these properties instead:
springdoc.show-actuator=true
management.endpoints.enabled-by-default=true
# Security Configuration - Allow actuator endpoints without authentication
management.security.enabled=false
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# Disable default Spring Security for development
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
spring.security.enabled=false

# Or alternatively, configure basic security
spring.security.user.name=admin
spring.security.user.password=admin
spring.security.user.roles=ADMIN,ACTUATOR

